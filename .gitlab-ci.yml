stages:
  - build
  - deploy

# Prepare release name/number
.get_release_name: &get_release_name |
  VER_DESC=$(git describe | sed -E -n 's|.*crosstool-ng-([0-9]+).([0-9]+).([0-9]+)-([0-9]+)-g([0-9a-f]{7}).*|\1.\2.\3-\4-g\5|gp')
  REL_NAME=xtensa-esp32-elf-${PLATFORM_NAME}-${VER_DESC}-5.2.0
  echo "PLATFORM_NAME: $PLATFORM_NAME"
  echo "VER_DESC: $VER_DESC"
  echo "REL_NAME: $REL_NAME"


# Configure and install crosstool-NG
.build_ctng: &build_ctng |
  ./bootstrap
  ./configure --enable-local
  make install
  ./ct-ng xtensa-esp32-elf

# ct-ng options common for all platforms
.configure_common: &configure_common |
  echo "# CT_LOG_PROGRESS_BAR is not set" >> .config
  echo "# CT_INSTALL_DIR_RO is not set" >> .config
  echo "CT_LOG_EXTRA=y" >> .config
  echo "CT_LOG_LEVEL_MAX=\"EXTRA\"" >> .config

# If PIE is enabled by default in build GCC, add a flag to disable it
.configure_linux_no_pie: &configure_linux_no_pie |
  gcc -v |& grep -- --enable-default-pie > /dev/null && echo "CT_EXTRA_LDFLAGS_FOR_HOST=\"-no-pie\"" >> .config

# Configuration specific to Docker
.configure_docker: &configure_docker |
  echo "CT_ALLOW_BUILD_AS_ROOT=y" >> .config
  echo "CT_ALLOW_BUILD_AS_ROOT_SURE=y" >> .config  

# Download tarballs and extract them into build directory
.get_tarballs: &get_tarballs |
  wget https://ci.espressif.cn:42348/cache/ct-ng-tarballs.tar
  test "$(shasum -a 256 ct-ng-tarballs.tar | cut -d ' ' -f 1)" = "9b3a5662474bbc53613b6d4d2ef00e7767e0e1c1f20dfed1193654739506a3ce"
  mkdir -p .build/tarballs
  cd .build/tarballs
  tar xvf ../../ct-ng-tarballs.tar
  cd ../../

# Actual build
.build_toolchain: &build_toolchain |
  ./ct-ng oldconfig
  ./ct-ng build

# Package the toolchain
.package_toolchain: &package_toolchain |
  mkdir -p dist
  cd builds
  rm xtensa-esp32-elf/build.log.bz2
  ${ARCHIVE_TOOL} ${REL_NAME}.${ARCHIVE_EXT} xtensa-esp32-elf/
  ls -l
  mv ${REL_NAME}.${ARCHIVE_EXT} ../dist/
  cd ../


# Common template for all builds
.build_template: &build_template
  stage: build

  artifacts:
    paths:
      - .config
      - build.log
      - dist
    when: always
    expire_in: 6 weeks

.build_template_linux: &build_template_linux
  <<: *build_template
  script:
    - *get_release_name
    - *build_ctng
    - *configure_common
    - *configure_docker
    - *configure_linux_no_pie
    - *get_tarballs
    - *build_toolchain
    - *package_toolchain

build_linux:
  tags:
    - build
  image: $CI_DOCKER_REGISTRY/esp32-toolchain
  variables:
    PLATFORM_NAME: "linux64"
    ARCHIVE_TOOL: "tar czvf"
    ARCHIVE_EXT: "tar.gz"
  <<: *build_template_linux

build_linux_x86:
  tags:
    - build
  image: $CI_DOCKER_REGISTRY/esp32-toolchain-x86
  variables:
    PLATFORM_NAME: "linux32"
    ARCHIVE_TOOL: "tar czvf"
    ARCHIVE_EXT: "tar.gz"
  <<: *build_template_linux

build_macos:
  tags:
    - build_macos_case_sensitive
  variables:
    PLATFORM_NAME: "osx"
    ARCHIVE_TOOL: "tar czvf"
    ARCHIVE_EXT: "tar.gz"
  <<: *build_template
  script:
    - *get_release_name
    - *build_ctng
    - *configure_common
    - *get_tarballs
    - *build_toolchain
    - *package_toolchain

build_windows:
  tags:
    - build
  image: $CI_DOCKER_REGISTRY/esp32-toolchain-win-cross
  variables:
    PLATFORM_NAME: "win32"
    ARCHIVE_TOOL: "tar czvf"
    ARCHIVE_EXT: "tar.gz"
  <<: *build_template
  script:
    - *get_release_name
    - *build_ctng
    - *configure_common
    - *configure_docker
    # Override options specific for Windows
    - echo "CT_CANADIAN=y" >> .config
    - echo "CT_HOST=\"i686-pc-mingw32\"" >> .config
    - echo "CT_HOST_PREFIX=\"i686-w64-mingw32-\"" >> .config
    - echo "CT_HOST_SUFFIX=\"\"" >> .config
    - echo "# CT_GDB_CROSS_PYTHON is not set" >> .config
    - *get_tarballs
    - *build_toolchain
    - *package_toolchain

